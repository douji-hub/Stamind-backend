name: cicd

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 完整檢出專案
          submodules: true # 如果有子模組

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript
        run: npx tsc --noEmit

      - name: Build project
        run: npm run build --if-present

      - name: Run tests
        run: npm run test

      # Docker Login
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push first image
      - name: Build and Push app1 Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/stamind-backend1:latest -f Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/stamind-backend1:latest

      # Build and push second image
      - name: Build and Push app2 Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/stamind-backend2:latest -f Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/stamind-backend2:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      # Deploy to Server
      - name: Deploy to Server
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
            cd ~/桌面/yzuic/stamind/backend
            docker compose pull
            docker compose up -d --build
          EOF
