user  nginx;
worker_processes  auto;  # 自動配置工作進程數量，通常設置為 CPU 核心數量
error_log  /var/log/nginx/error.log warn;  # 錯誤日誌文件位置和錯誤等級，這裡設為 'warn'
pid        /var/run/nginx.pid;  # 存放 Nginx 進程 ID 的文件位置

events {
    worker_connections  1024;  # 每個工作進程的最大連接數量，影響並發能力
}

# HTTP 區域設置
http {
    include       /etc/nginx/mime.types;  # 包含 MIME 類型的定義文件，用於識別文件類型
    default_type  application/octet-stream;  # 默認的 MIME 類型，如果找不到匹配的類型則使用此類型
    sendfile        on;  # 啟用高效文件傳輸方式，減少上下文切換，提高性能
    keepalive_timeout  65;  # 連接保持打開的時間，以秒為單位

    # 啟用 Gzip 壓縮以提高資源傳輸效率
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 預防 DDOS 與短期內過度請求
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=3r/s;  #最大佔用 10MB，每秒最多允許 1 次請求

    # load balance，需注意應用程式必須是無狀態（正符合 RESTful API）
    upstream app_servers {
        server app1:3001;
        server app2:3001;
    }

    server {
        listen 80;  # 監聽 80 端口，處理 HTTP 請求
        server_name localhost;  # 服務器名為 localhost

        # 路徑處理請求
        location / {
            limit_req zone=mylimit burst=5;  # 限流設置，每個 IP 每秒最多 1 次請求，允許 5 次突發請求
            proxy_pass http://app_servers;  # 將請求代理到負載均衡組 'app_servers'
            proxy_set_header Host $host;  # 設置 Host 標頭為原始請求中的主機名
            proxy_set_header X-Real-IP $remote_addr;  # 設置 X-Real-IP 標頭為客戶端的 IP 地址
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 設置 X-Forwarded-For 標頭，用於標記經過的代理
            proxy_set_header X-Forwarded-Proto $scheme;  # 設置 X-Forwarded-Proto 標頭，用於標記請求的協議（http 或 https）
        }
    }
}
